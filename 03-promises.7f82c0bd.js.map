{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQG,EAAAZ,GAASa,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,QAE5EM,EAAKE,EAAAZ,GAASa,OAAOG,QAAQ,sBAAqCD,OAAfZ,EAAS,QAAYY,OAANX,EAAM,O,GAE3EA,E,KAIM,CACXa,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAwBC,GACtBA,EAAEC,iBAEF,IAAMlB,EAAQiB,EAAEE,cAAcC,SAASpB,MAAMqB,MACvCC,EAAOL,EAAEE,cAAcC,SAASE,KAAKD,MACrCE,EAASN,EAAEE,cAAcC,SAASG,OAAOF,MAC/CJ,EAAEE,cAAcK,QAEhB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAClC,IAAI1B,EAAW0B,EAAI,EACfC,EAAeC,OAAO3B,GAAO2B,OAAOL,GAAMG,EAE9C3B,EAAcC,EAAS2B,GAAeE,MAAK,SAAAC,G,OAAQA,C,IAAQC,OAAM,SAAAC,G,OAAOA,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        reject(Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n  });\n};\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onButtonSubmit);\n\nfunction onButtonSubmit(e) {\n  e.preventDefault();\n  \n  const delay = e.currentTarget.elements.delay.value;\n  const step = e.currentTarget.elements.step.value;\n  const amount = e.currentTarget.elements.amount.value;\n  e.currentTarget.reset();\n\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    let changingDelay =Number(delay)+Number(step)*i;\n\n    createPromise(position,changingDelay).then(succes=>succes).catch(error=>error);\n  }\n  \n};\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","success","concat","failure","form","document","querySelector","addEventListener","e","preventDefault","currentTarget","elements","value","step","amount","reset","i","changingDelay","Number","then","succes","catch","error"],"version":3,"file":"03-promises.7f82c0bd.js.map"}